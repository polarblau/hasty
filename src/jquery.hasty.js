// Generated by CoffeeScript 1.3.1
(function() {
  var $;

  $ = jQuery;

  $.fn.hasty = function(options) {
    var loadTemplate, render, settings, template, validateSettings;
    settings = $.extend({
      renderer: Mustache,
      template: '/hasty/themes/default/template.mustache',
      githubUser: null,
      githubRepo: null,
      commitIDs: null,
      commitsURL: null,
      perPage: 10
    });
    template = function() {};
    loadTemplate = function(url) {};
    validateSettings = function() {
      return true;
    };
    render = function(comments, $container) {
      var output;
      output = settings.renderer.render(defaultTemplate, {
        comments: comments
      });
      return $container.html(output);
    };
    return this.each(function() {
      var $this, comments, commitIDs, github, loadAndRender, loadComments, loadCommits;
      $this = $(this);
      commitIDs = settings.commitIDs || $this.data('commit-ids');
      comments = [];
      github = {
        user: settings.githubUser || $this.data('github-user'),
        repo: settings.githubRepo || $this.data('github-repo'),
        API: {
          repo: function() {
            return "https://api.github.com/repos/" + this.user + "/" + this.repo;
          },
          commit: function(commitID) {
            return "" + (githubAPI.repo()) + "/" + commitID;
          },
          commitComments: function(commitID) {
            return "" + (github.commit(commitID)) + "/comments";
          }
        },
        web: {
          repo: function() {
            return "https://github.com/" + this.user + "/" + this.repo;
          },
          commitComments: function(commitID) {
            return "" + (github.repo()) + "/commit/" + commitID + "#comments";
          },
          commitComment: function(commitID, commentID) {
            return "" + (github.repo()) + "/commit/" + commitID + "#commitcomment-" + commentID;
          }
        }
      };
      loadCommits = function() {};
      loadComments = function() {};
      loadAndRender = function() {
        var commitID;
        if (!(commitIDs.length <= 0)) {
          commitID = commitIDs.shift();
          return $.ajax({
            url: commitCommentsURL(commitID),
            success: function(response) {
              comments = comments.concat(response.data);
              if (comments.length < settings.perPage) {
                loadAndRender();
              }
              return render(comments, $this);
            },
            dataType: 'jsonp'
          });
        }
      };
      return loadAndRender();
    });
  };

}).call(this);
